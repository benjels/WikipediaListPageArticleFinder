---
# ignore strings should be lowercase.
# TODO - lower() in code


#the blacklist and the whitelist are used to determine whether some article/list-article is related to the topics that we are interested in. The listEntryRequirements list also helps filter out articles by looking for patterns that must exist in the URL.
#It is necessary to break these into two groups because there is sometimes information present in the URL that is not in the page source. e.g. "https://en.wikipedia.org/wiki/Kerikeri#Origins_and_naming" yields the same source as "https://en.wikipedia.org/wiki/Kerikeri", but we are only interested in the latter.
whitelist:
  p:
    - 'new zealand'
  title:
    - 'new zealand'


blacklist:
  "body":
    - "this article is not related to new zealand!"

#regex patterns that a would-be harvested link must match wtih
listEntryRequirements:
  - ".{9}" # the article url extension should be of a sensible length. i.e. at least 9 chars
  - "^/wiki/|^/w/" # the href should have wiki or w in the url else it probably is some kind of meta info page rather than an article
#regex patterns that a would-be harvested link must NOT match with
listEntryDissaloweds:
  - "/wiki/Template_talk:"
  - "/wiki/Portal:"
  - "/wiki/Special:"
  - "/wiki/Template:"
  - "&action=edit"

#scrape starting points
#css selectors to determine where we should look in list articles for list elements
scopes:
   - "div#mw-content-text li a" #quite a loose filter...
   - a[href^="/w/index.php?title=Category:All_Wikipedia_articles_written_in_New_Zealand_English&pagefrom"]

collectionArticleIdentifiers:
  title:
    - "[^a-z|A-Z]list[^a-z|A-Z]|^list[^a-z|A-Z]|[^a-z|A-Z]list$|[^a-z|A-Z]lists[^a-z|A-Z]|^lists[^a-z|A-Z]|[^a-z|A-Z]lists$" #pattern that finds articles with lists/list as a discrete word in the article URL
    - "Category:" #category articles can be thought of as lists i guess

#start points for the recursive search
seeds:
  "/wiki/Category:All_Wikipedia_articles_written_in_New_Zealand_English":
    50
  /wiki/Category:New_Zealand-related_lists:
    8















